Map setup definitions

0x4f6e2     start of map setups list

Address 1   entity locations
Address 2   entity-activated events (entity #, facing, offset to cutscene script (2 bytes)) (entity is FD for "default")
Address 3   zone-activated events
Address 4   interactive things (notes, books, wells, etc)
Address 5   flag + tile locations + ??? (seems rather special; only Ribble, Hassan, DesktopWorld, Nazca Ship, Devil's Head, etc have it)
Address 6   custom script on map load




ROM:00050B30 ms_map3_Entities:dc.b $2A               ; DATA XREF: ROM:ms_map3o
ROM:00050B30                                         ; initial X of entity
ROM:00050B31                 dc.b 8                  ; initial Y pos
ROM:00050B32                 dc.b 3                  ; initial facing
ROM:00050B33                 dc.b 1                  ; sprite
ROM:00050B34                 dc.l eas_Init           ; script
ROM:00050B38                 dc.b $2C
ROM:00050B39                 dc.b $A
ROM:00050B3A                 dc.b 1
ROM:00050B3B                 dc.b 2
ROM:00050B3C                 dc.l eas_Init           ; 0011  $0
ROM:00050B40                 dc.b 5
ROM:00050B41                 dc.b 6
ROM:00050B42                 dc.b 0
ROM:00050B43                 dc.b $C3
ROM:00050B44                 dc.l eas_Init2          ; 0010 SET SPEED X=$10 Y=$10
ROM:00050B48                 dc.b $D                 ; Initial XPos
ROM:00050B49                 dc.b 8                  ; Initial YPos
ROM:00050B4A                 dc.b 0                  ; Initial Facing
ROM:00050B4B                 dc.b $C7                ; Entity Number ? Determines the sprite, no matter the facing
ROM:00050B4C                 dc.l eas_Init           ; Actscript to apply
ROM:00050B50                 dc.b $14                ; Initial XPos
ROM:00050B51                 dc.b $D                 ; Initial YPos
ROM:00050B52                 dc.b 3                  ; Initial Facing
ROM:00050B53                 dc.b $C1                ; Entity Number ? Determines the sprite, no matter the facing
ROM:00050B54                 dc.b $FF                ; FF to give random walk
ROM:00050B55                 dc.b $14                ; Random Center XPos
ROM:00050B56                 dc.b $D                 ; Random Center YPos
ROM:00050B57                 dc.b 3                  ; Max Distance from center
ROM:00050B58                 dc.b $12
ROM:00050B59                 dc.b $A
ROM:00050B5A                 dc.b 3
ROM:00050B5B                 dc.b $C3
ROM:00050B5C                 dc.b $FF
ROM:00050B5D                 dc.b $12
ROM:00050B5E                 dc.b $A
ROM:00050B5F                 dc.b 1
ROM:00050B60                 dc.b $15
ROM:00050B61                 dc.b 9
ROM:00050B62                 dc.b 3
ROM:00050B63                 dc.b $C8
ROM:00050B64                 dc.l eas_Init           ; 0011  $0
ROM:00050B68                 dc.b $C
ROM:00050B69                 dc.b 9
ROM:00050B6A                 dc.b 3
ROM:00050B6B                 dc.b $C6
ROM:00050B6C                 dc.b $FF
ROM:00050B6D                 dc.b $C
ROM:00050B6E                 dc.b 9
ROM:00050B6F                 dc.b 1
ROM:00050B70                 dc.b 7
ROM:00050B71                 dc.b $12
ROM:00050B72                 dc.b 3
ROM:00050B73                 dc.b $C1
ROM:00050B74                 dc.l eas_Init           ; 0011  $0
ROM:00050B78                 dc.b $3F
ROM:00050B79                 dc.b $3F
ROM:00050B7A                 dc.b 3
ROM:00050B7B                 dc.b $D1
ROM:00050B7C                 dc.l eas_Init           ; 0011  $0
ROM:00050B80                 dc.b $3F
ROM:00050B81                 dc.b $3F
ROM:00050B82                 dc.b 3
ROM:00050B83                 dc.b $D1
ROM:00050B84                 dc.l eas_Init           ; 0011  $0
ROM:00050B88                 dc.b $2D
ROM:00050B89                 dc.b $16
ROM:00050B8A                 dc.b 1
ROM:00050B8B                 dc.b $C4
ROM:00050B8C                 dc.l eas_Init           ; 0011  $0
ROM:00050B90                 dc.b $1B
ROM:00050B91                 dc.b 3
ROM:00050B92                 dc.b 3
ROM:00050B93                 dc.b $CE
ROM:00050B94                 dc.l eas_Init           ; 0011  $0
ROM:00050B98                 dc.b $1F
ROM:00050B99                 dc.b 3
ROM:00050B9A                 dc.b 3
ROM:00050B9B                 dc.b $CE
ROM:00050B9C                 dc.l eas_Init           ; 0011  $0
ROM:00050BA0                 dc.b 1
ROM:00050BA1                 dc.b $17
ROM:00050BA2                 dc.b 0
ROM:00050BA3                 dc.b $CE
ROM:00050BA4                 dc.l eas_Init           ; 0011  $0
ROM:00050BA8                 dc.b $20
ROM:00050BA9                 dc.b $B
ROM:00050BAA                 dc.b 3
ROM:00050BAB                 dc.b $C0
ROM:00050BAC                 dc.l eas_Init           ; 0011  $0
ROM:00050BB0                 dc.b $36
ROM:00050BB1                 dc.b $11
ROM:00050BB2                 dc.b 1
ROM:00050BB3                 dc.b $D1
ROM:00050BB4                 dc.l eas_Init           ; 0011  $0
ROM:00050BB8                 dc.b $3F
ROM:00050BB9                 dc.b $3F
ROM:00050BBA                 dc.b 1
ROM:00050BBB                 dc.b $CE
ROM:00050BBC                 dc.l eas_Init           ; 0011  $0
ROM:00050BC0                 dc.b 8
ROM:00050BC1                 dc.b $12
ROM:00050BC2                 dc.b 3
ROM:00050BC3                 dc.b $C1
ROM:00050BC4                 dc.l eas_Init           ; 0011  $0
ROM:00050BC8                 dc.w $FFFF
